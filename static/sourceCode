from flask import Flask, request, abort
from linebot import (
     LineBotApi, WebhookHandler
 )
from linebot.exceptions import (
     InvalidSignatureError
 )
from linebot.models import *
import os

import json
import requests

app = Flask(__name__)
#  Channel Access Token
line_bot_api = LineBotApi('')
#  Channel Secret
handler = WebhookHandler('')
#  監聽所有來自 /callback 的 Post Request
@app.route("/callback", methods=['POST'])
def callback():
    # get X-Line-Signature header value
    signature = request.headers['X-Line-Signature']
    # get request body as text
    body = request.get_data(as_text=True)
    app.logger.info("Request body: " + body)
    # handle webhook body
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)
    return 'OK'


#  處理訊息
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    message = TextSendMessage(text=event.message.text)
     
    print(message) 
    if event.message.text == "image":

        url = "http://localhost:4040/api/tunnels"
        res = requests.get(url)
        res_unicode = res.content.decode("utf-8")
        res_json = json.loads(res_unicode)
        print( res_json["tunnels"][0]["public_url"])

        url = res_json["tunnels"][0]["public_url"]
        message = ImageSendMessage(
            original_content_url= url + "/static/testImage.png",  preview_image_url = url + "/static/testImage.png")

    elif event.message.text == "video":  
        url = "http://localhost:4040/api/tunnels"
        res = requests.get(url)
        res_unicode = res.content.decode("utf-8")
        res_json = json.loads(res_unicode)
        print( res_json["tunnels"][0]["public_url"])

        url = res_json["tunnels"][0]["public_url"]

        message = VideoSendMessage(
            original_content_url = url + "/static/testVideo.mp4", preview_image_url = url + "/static/videoDemo.png")
            
    else:  
        # return message
        message = TextSendMessage(text=event.message.text)

    line_bot_api.reply_message(event.reply_token, message)

@app.route('/')
def index():
    return 'Hello World'


if __name__ == "__main__":
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)
